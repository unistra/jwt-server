stages:
  - test
  - sonarqube-check

services:
  - name: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/postgres
    alias: postgres

variables:
  POSTGRES_DB: jwtserver-test
  POSTGRES_USER: jwtserver
  POSTGRES_PASSWORD: jwtserver
  PYTHON_VERSION: "3.9"

before_script:
  - apt-get update && apt-get install -y build-essential libpq-dev libldap2-dev libsasl2-dev python-dev libssl-dev

sonarqube-check:
  stage: sonarqube-check
  image: 
    name: sonarsource/sonar-scanner-cli:11
    entrypoint: [""]
  tags:
    - cluster

  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  
  script: 
    - sonar-scanner -Dsonar.host.url="${SONAR_HOST_URL}"
  allow_failure: true
  needs:
    - job: unittest
      artifacts: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'main'
    - if: $CI_COMMIT_BRANCH == 'develop'

include:
  - project: "docker/template"
    file: "python-black.gitlab-ci.yml"
  - project: "docker/template"
    file: "python-unittest.gitlab-ci.yml"
  - project: "docker/template"
    file: "python-safety.gitlab-ci.yml"